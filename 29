def func2(arg4, arg5):
    var6 = func5()
    var14 = func6(var6, arg5)
    var15 = func11()
    var16 = var14 ^ -1027596593 ^ (697 - (arg4 ^ var14)) + -5 - arg5
    if var16 < var14:
        var17 = (var14 + -744240954) ^ var15
    else:
        var17 = ((var14 - (507 - var14)) ^ arg5 ^ arg5) | (-154 | var14 & ((((((arg5 + -1081049995) - -448558141) + 1731285524 + arg5 ^ (var6 ^ var16 ^ arg4 - (var15 - var6 & var6))) - 2073835663) - var16) + var6) & 224387886)
    var18 = (var15 + var6) - var16 | -1545624078 ^ arg4 - 1849328425
    result = var15 & 1096871939 ^ var14 & arg5
    return result
def func11():
    func9()
    result = len(xrange(45))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 7
def func8(arg9, arg10):
    var11 = -157 & 1417733233
    var12 = -1224214342 + -656
    result = var11 - -1525631869 ^ 622205169 | (var11 ^ 517)
    return result
def func5():
    func3()
    result = len(((i - -5) | (5 | (5 - (-10 | (-1 & -10)) + 5 - -1) + i & -8) + -8 for i in (-4 | -10 for i in xrange(23))))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -10
def func1(arg1, arg2):
    var3 = 1146548037 | arg1 & arg2
    result = arg1 | (519 ^ (arg2 + var3 ^ arg1 + arg2 + 29439583 ^ 761) - var3) & -967776537
    return result
def func6(arg7, arg8):
    def func7(acc, rest):
        var13 = func8(5, rest)
        if acc == 0:
            return var13
        else:
            result = func7(acc - 1, var13)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 4'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg4, arg5):
    var6 = func5()
    var14 = func6(var6, arg5)
    var15 = func11()
    var16 = var14 ^ -1027596593 ^ (697 - (arg4 ^ var14)) + -5 - arg5
    if var16 < var14:
        var17 = (var14 + -744240954) ^ var15
    else:
        var17 = ((var14 - (507 - var14)) ^ arg5 ^ arg5) | (-154 | var14 & ((((((arg5 + -1081049995) - -448558141) + 1731285524 + arg5 ^ (var6 ^ var16 ^ arg4 - (var15 - var6 & var6))) - 2073835663) - var16) + var6) & 224387886)
    var18 = (var15 + var6) - var16 | -1545624078 ^ arg4 - 1849328425
    result = var15 & 1096871939 ^ var14 & arg5
    return result
def func11():
    func9()
    result = len(xrange(45))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 7
def func8(arg9, arg10):
    var11 = -157 & 1417733233
    var12 = -1224214342 + -656
    result = var11 - -1525631869 ^ 622205169 | (var11 ^ 517)
    return result
def func5():
    func3()
    result = len(((i - -5) | (5 | (5 - (-10 | (-1 & -10)) + 5 - -1) + i & -8) + -8 for i in (-4 | -10 for i in xrange(23))))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -10
def func1(arg1, arg2):
    var3 = 1146548037 | arg1 & arg2
    result = arg1 | (519 ^ (arg2 + var3 ^ arg1 + arg2 + 29439583 ^ 761) - var3) & -967776537
    return result
def func6(arg7, arg8):
    def func7(acc, rest):
        var13 = func8(5, rest)
        if acc == 0:
            return var13
        else:
            result = func7(acc - 1, var13)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 4'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg4, arg5):
    var6 = func5()
    var14 = func6(var6, arg5)
    var15 = func11()
    var16 = var14 ^ -1027596593 ^ (697 - (arg4 ^ var14)) + -5 - arg5
    if var16 < var14:
        var17 = (var14 + -744240954) ^ var15
    else:
        var17 = ((var14 - (507 - var14)) ^ arg5 ^ arg5) | (-154 | var14 & ((((((arg5 + -1081049995) - -448558141) + 1731285524 + arg5 ^ (var6 ^ var16 ^ arg4 - (var15 - var6 & var6))) - 2073835663) - var16) + var6) & 224387886)
    var18 = (var15 + var6) - var16 | -1545624078 ^ arg4 - 1849328425
    result = var15 & 1096871939 ^ var14 & arg5
    return result
def func11():
    func9()
    result = len(xrange(45))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 7
def func8(arg9, arg10):
    var11 = -157 & 1417733233
    var12 = -1224214342 + -656
    result = var11 - -1525631869 ^ 622205169 | (var11 ^ 517)
    return result
def func5():
    func3()
    result = len(((i - -5) | (5 | (5 - (-10 | (-1 & -10)) + 5 - -1) + i & -8) + -8 for i in (-4 | -10 for i in xrange(23))))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -10
def func1(arg1, arg2):
    var3 = 1146548037 | arg1 & arg2
    result = arg1 | (519 ^ (arg2 + var3 ^ arg1 + arg2 + 29439583 ^ 761) - var3) & -967776537
    return result
def func6(arg7, arg8):
    def func7(acc, rest):
        var13 = func8(5, rest)
        if acc == 0:
            return var13
        else:
            result = func7(acc - 1, var13)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 4'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg4, arg5):
    var6 = func5()
    var14 = func6(var6, arg5)
    var15 = func11()
    var16 = var14 ^ -1027596593 ^ (697 - (arg4 ^ var14)) + -5 - arg5
    if var16 < var14:
        var17 = (var14 + -744240954) ^ var15
    else:
        var17 = ((var14 - (507 - var14)) ^ arg5 ^ arg5) | (-154 | var14 & ((((((arg5 + -1081049995) - -448558141) + 1731285524 + arg5 ^ (var6 ^ var16 ^ arg4 - (var15 - var6 & var6))) - 2073835663) - var16) + var6) & 224387886)
    var18 = (var15 + var6) - var16 | -1545624078 ^ arg4 - 1849328425
    result = var15 & 1096871939 ^ var14 & arg5
    return result
def func11():
    func9()
    result = len(xrange(45))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 7
def func8(arg9, arg10):
    var11 = -157 & 1417733233
    var12 = -1224214342 + -656
    result = var11 - -1525631869 ^ 622205169 | (var11 ^ 517)
    return result
def func5():
    func3()
    result = len(((i - -5) | (5 | (5 - (-10 | (-1 & -10)) + 5 - -1) + i & -8) + -8 for i in (-4 | -10 for i in xrange(23))))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -10
def func1(arg1, arg2):
    var3 = 1146548037 | arg1 & arg2
    result = arg1 | (519 ^ (arg2 + var3 ^ arg1 + arg2 + 29439583 ^ 761) - var3) & -967776537
    return result
def func6(arg7, arg8):
    def func7(acc, rest):
        var13 = func8(5, rest)
        if acc == 0:
            return var13
        else:
            result = func7(acc - 1, var13)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 4'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg4, arg5):
    var6 = func5()
    var14 = func6(var6, arg5)
    var15 = func11()
    var16 = var14 ^ -1027596593 ^ (697 - (arg4 ^ var14)) + -5 - arg5
    if var16 < var14:
        var17 = (var14 + -744240954) ^ var15
    else:
        var17 = ((var14 - (507 - var14)) ^ arg5 ^ arg5) | (-154 | var14 & ((((((arg5 + -1081049995) - -448558141) + 1731285524 + arg5 ^ (var6 ^ var16 ^ arg4 - (var15 - var6 & var6))) - 2073835663) - var16) + var6) & 224387886)
    var18 = (var15 + var6) - var16 | -1545624078 ^ arg4 - 1849328425
    result = var15 & 1096871939 ^ var14 & arg5
    return result
def func11():
    func9()
    result = len(xrange(45))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 7
def func8(arg9, arg10):
    var11 = -157 & 1417733233
    var12 = -1224214342 + -656
    result = var11 - -1525631869 ^ 622205169 | (var11 ^ 517)
    return result
def func5():
    func3()
    result = len(((i - -5) | (5 | (5 - (-10 | (-1 & -10)) + 5 - -1) + i & -8) + -8 for i in (-4 | -10 for i in xrange(23))))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -10
def func1(arg1, arg2):
    var3 = 1146548037 | arg1 & arg2
    result = arg1 | (519 ^ (arg2 + var3 ^ arg1 + arg2 + 29439583 ^ 761) - var3) & -967776537
    return result
def func6(arg7, arg8):
    def func7(acc, rest):
        var13 = func8(5, rest)
        if acc == 0:
            return var13
        else:
            result = func7(acc - 1, var13)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 4'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg4, arg5):
    var6 = func5()
    var14 = func6(var6, arg5)
    var15 = func11()
    var16 = var14 ^ -1027596593 ^ (697 - (arg4 ^ var14)) + -5 - arg5
    if var16 < var14:
        var17 = (var14 + -744240954) ^ var15
    else:
        var17 = ((var14 - (507 - var14)) ^ arg5 ^ arg5) | (-154 | var14 & ((((((arg5 + -1081049995) - -448558141) + 1731285524 + arg5 ^ (var6 ^ var16 ^ arg4 - (var15 - var6 & var6))) - 2073835663) - var16) + var6) & 224387886)
    var18 = (var15 + var6) - var16 | -1545624078 ^ arg4 - 1849328425
    result = var15 & 1096871939 ^ var14 & arg5
    return result
def func11():
    func9()
    result = len(xrange(45))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 7
def func8(arg9, arg10):
    var11 = -157 & 1417733233
    var12 = -1224214342 + -656
    result = var11 - -1525631869 ^ 622205169 | (var11 ^ 517)
    return result
def func5():
    func3()
    result = len(((i - -5) | (5 | (5 - (-10 | (-1 & -10)) + 5 - -1) + i & -8) + -8 for i in (-4 | -10 for i in xrange(23))))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -10
def func1(arg1, arg2):
    var3 = 1146548037 | arg1 & arg2
    result = arg1 | (519 ^ (arg2 + var3 ^ arg1 + arg2 + 29439583 ^ 761) - var3) & -967776537
    return result
def func6(arg7, arg8):
    def func7(acc, rest):
        var13 = func8(5, rest)
        if acc == 0:
            return var13
        else:
            result = func7(acc - 1, var13)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 4'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg4, arg5):
    var6 = func5()
    var14 = func6(var6, arg5)
    var15 = func11()
    var16 = var14 ^ -1027596593 ^ (697 - (arg4 ^ var14)) + -5 - arg5
    if var16 < var14:
        var17 = (var14 + -744240954) ^ var15
    else:
        var17 = ((var14 - (507 - var14)) ^ arg5 ^ arg5) | (-154 | var14 & ((((((arg5 + -1081049995) - -448558141) + 1731285524 + arg5 ^ (var6 ^ var16 ^ arg4 - (var15 - var6 & var6))) - 2073835663) - var16) + var6) & 224387886)
    var18 = (var15 + var6) - var16 | -1545624078 ^ arg4 - 1849328425
    result = var15 & 1096871939 ^ var14 & arg5
    return result
def func11():
    func9()
    result = len(xrange(45))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 7
def func8(arg9, arg10):
    var11 = -157 & 1417733233
    var12 = -1224214342 + -656
    result = var11 - -1525631869 ^ 622205169 | (var11 ^ 517)
    return result
def func5():
    func3()
    result = len(((i - -5) | (5 | (5 - (-10 | (-1 & -10)) + 5 - -1) + i & -8) + -8 for i in (-4 | -10 for i in xrange(23))))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -10
def func1(arg1, arg2):
    var3 = 1146548037 | arg1 & arg2
    result = arg1 | (519 ^ (arg2 + var3 ^ arg1 + arg2 + 29439583 ^ 761) - var3) & -967776537
    return result
def func6(arg7, arg8):
    def func7(acc, rest):
        var13 = func8(5, rest)
        if acc == 0:
            return var13
        else:
            result = func7(acc - 1, var13)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 4'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg4, arg5):
    var6 = func5()
    var14 = func6(var6, arg5)
    var15 = func11()
    var16 = var14 ^ -1027596593 ^ (697 - (arg4 ^ var14)) + -5 - arg5
    if var16 < var14:
        var17 = (var14 + -744240954) ^ var15
    else:
        var17 = ((var14 - (507 - var14)) ^ arg5 ^ arg5) | (-154 | var14 & ((((((arg5 + -1081049995) - -448558141) + 1731285524 + arg5 ^ (var6 ^ var16 ^ arg4 - (var15 - var6 & var6))) - 2073835663) - var16) + var6) & 224387886)
    var18 = (var15 + var6) - var16 | -1545624078 ^ arg4 - 1849328425
    result = var15 & 1096871939 ^ var14 & arg5
    return result
def func11():
    func9()
    result = len(xrange(45))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 7
def func8(arg9, arg10):
    var11 = -157 & 1417733233
    var12 = -1224214342 + -656
    result = var11 - -1525631869 ^ 622205169 | (var11 ^ 517)
    return result
def func5():
    func3()
    result = len(((i - -5) | (5 | (5 - (-10 | (-1 & -10)) + 5 - -1) + i & -8) + -8 for i in (-4 | -10 for i in xrange(23))))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -10
def func1(arg1, arg2):
    var3 = 1146548037 | arg1 & arg2
    result = arg1 | (519 ^ (arg2 + var3 ^ arg1 + arg2 + 29439583 ^ 761) - var3) & -967776537
    return result
def func6(arg7, arg8):
    def func7(acc, rest):
        var13 = func8(5, rest)
        if acc == 0:
            return var13
        else:
            result = func7(acc - 1, var13)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 4'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
